version: '3'

services:
  monitoringnetcore:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "7009:7009"
      - "5273:5273"
      - "8888:8888"
    depends_on:
      - minio
      - postgres
      - video_processor
    environment:
      ConnectionStrings__PostgresConnection: "Server=postgres;Database=monitoring;User Id=user;Password=password"
      MediaMTX__Path: "/mediamtx/"
      MediaMTX__Host: "monitoringnetcore"
      AWS__Endpoint: "http://minio:9000"
      AWS__AccessKeyId: minioaccesskey
      AWS__SecretAccessKey: miniosecretkey
      VideoProcessor__URL: "http://video_processor:8000"
      ASPNETCORE_URLS: "http://*:5273"

  postgres:
    image: postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: monitoring
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  minio:
    image: minio/minio
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    environment:
      MINIO_ACCESS_KEY: minioaccesskey
      MINIO_SECRET_KEY: miniosecretkey
    ports:
      - "9000:9000"
      - "9001:9001"
    
  createbuckets:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set myminio http://minio:9000 minioaccesskey miniosecretkey;
      /usr/bin/mc mb myminio/uploads;
      /usr/bin/mc anonymous set public myminio/uploads;
      /usr/bin/mc mb myminio/thumbnails;
      /usr/bin/mc anonymous set public myminio/thumbnails;
      /usr/bin/mc mb myminio/processed;
      /usr/bin/mc anonymous set public myminio/processed;
      exit 0;
      "

      
      
  video_processor:
    build:
      context: ./video_processor  # path to your Python Dockerfile
      dockerfile: Dockerfile
    ports:
      - "8000:8000"

volumes:
  db_data: {}
  minio_data: {}

